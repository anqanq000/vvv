# cmake build file

PROJECT(QTV3VolumeRenderer)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.3)

# non-standard path to Qt4
SET(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH};
    /usr/local/Trolltech/Qt-4.7.4;
   )

# Qt4 dependency
SET(QT_USE_QTOPENGL TRUE)
FIND_PACKAGE(Qt4 COMPONENTS QtCore QtGui REQUIRED)
INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})

# find threads library
FIND_PACKAGE(Threads)

# OpenGL dependency
FIND_PACKAGE(OpenGL)

# find DCMTK dependencies
FIND_LIBRARY(DCMTK_ofstd_LIBRARY ofstd)
FIND_LIBRARY(DCMTK_oflog_LIBRARY oflog)
FIND_LIBRARY(DCMTK_dcmdata_LIBRARY dcmdata)
FIND_LIBRARY(DCMTK_dcmjpeg_LIBRARY dcmjpeg)
FIND_LIBRARY(DCMTK_ijg8_LIBRARY ijg8)
FIND_LIBRARY(DCMTK_ijg12_LIBRARY ijg12)
FIND_LIBRARY(DCMTK_ijg16_LIBRARY ijg16)
FIND_LIBRARY(DCMTK_dcmtls_LIBRARY dcmtls)
FIND_PATH(DMTK_INCLUDE_DIR dcmtk/dcmdata/dctk.h)
INCLUDE_DIRECTORIES(${DCMTK_INCLUDE_DIR})
IF (NOT WIN32)
   ADD_DEFINITIONS(-DHAVE_CONFIG_H)
ENDIF (NOT WIN32)

# find ZLIB dependency
FIND_PACKAGE(ZLIB)
INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIR})

# volren dependency
FIND_PATH(VOLREN_PATH volren.h PATHS .. PATH_SUFFIXES volren)
FIND_LIBRARY(VOLREN_LIBRARY VolRen PATHS .. PATH_SUFFIXES lib)
INCLUDE_DIRECTORIES(${VOLREN_PATH})

# header list
SET(LIB_HDRS
   volren_qgl.h
   mainwindow.h
   )

# module list
SET(LIB_SRCS
   mainwindow.cpp
   )

# moc
QT4_WRAP_CPP(MOC_OUTFILES ${LIB_HDRS})

# library
SET(LIB_NAME ${PROJECT_NAME})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
ADD_LIBRARY(${LIB_NAME} ${LIB_SRCS} ${LIB_HDRS} ${MOC_OUTFILES})

# executable
ADD_EXECUTABLE(qtv3 qtv3.cpp)
TARGET_LINK_LIBRARIES(qtv3
   ${LIB_NAME}
   ${QT_LIBRARIES}
   ${VOLREN_LIBRARY}
   ${OPENGL_LIBRARIES}
   ${DCMTK_dcmdata_LIBRARY}
   ${DCMTK_dcmjpeg_LIBRARY}
   ${DCMTK_ijg8_LIBRARY}
   ${DCMTK_ijg12_LIBRARY}
   ${DCMTK_ijg16_LIBRARY}
   ${DCMTK_dcmtls_LIBRARY}
   ${DCMTK_oflog_LIBRARY}
   ${DCMTK_ofstd_LIBRARY}
   ${ZLIB_LIBRARY}
   ${CMAKE_THREAD_LIBS_INIT}
   )
